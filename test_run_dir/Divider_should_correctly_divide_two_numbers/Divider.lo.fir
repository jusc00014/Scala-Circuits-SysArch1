FIRRTL version 1.2.0
circuit Divider :
  module Divider : @[src/main/scala/arithmetic/Divider.scala 6:7]
    input clock : Clock @[src/main/scala/arithmetic/Divider.scala 6:7]
    input reset : UInt<1> @[src/main/scala/arithmetic/Divider.scala 6:7]
    input io_start : UInt<1> @[src/main/scala/arithmetic/Divider.scala 7:16]
    output io_done : UInt<1> @[src/main/scala/arithmetic/Divider.scala 7:16]
    input io_dividend : UInt<6> @[src/main/scala/arithmetic/Divider.scala 7:16]
    input io_divisor : UInt<6> @[src/main/scala/arithmetic/Divider.scala 7:16]
    output io_quotient : UInt<6> @[src/main/scala/arithmetic/Divider.scala 7:16]
    output io_remainder : UInt<6> @[src/main/scala/arithmetic/Divider.scala 7:16]

    reg remainder : UInt<6>, clock with :
      reset => (UInt<1>("h0"), remainder) @[src/main/scala/arithmetic/Divider.scala 20:28]
    reg quotient_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), quotient_0) @[src/main/scala/arithmetic/Divider.scala 21:27]
    reg quotient_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), quotient_1) @[src/main/scala/arithmetic/Divider.scala 21:27]
    reg quotient_2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), quotient_2) @[src/main/scala/arithmetic/Divider.scala 21:27]
    reg quotient_3 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), quotient_3) @[src/main/scala/arithmetic/Divider.scala 21:27]
    reg quotient_4 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), quotient_4) @[src/main/scala/arithmetic/Divider.scala 21:27]
    reg quotient_5 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), quotient_5) @[src/main/scala/arithmetic/Divider.scala 21:27]
    reg divisor : UInt<6>, clock with :
      reset => (UInt<1>("h0"), divisor) @[src/main/scala/arithmetic/Divider.scala 22:26]
    reg sumcollector : UInt<6>, clock with :
      reset => (UInt<1>("h0"), sumcollector) @[src/main/scala/arithmetic/Divider.scala 24:31]
    reg counter : UInt<7>, clock with :
      reset => (UInt<1>("h0"), counter) @[src/main/scala/arithmetic/Divider.scala 25:26]
    reg loopdone : UInt<1>, clock with :
      reset => (UInt<1>("h0"), loopdone) @[src/main/scala/arithmetic/Divider.scala 26:27]
    node _quotient_0_T = bits(io_dividend, 0, 0) @[src/main/scala/arithmetic/Divider.scala 38:39]
    node _quotient_1_T = bits(io_dividend, 1, 1) @[src/main/scala/arithmetic/Divider.scala 38:39]
    node _quotient_2_T = bits(io_dividend, 2, 2) @[src/main/scala/arithmetic/Divider.scala 38:39]
    node _quotient_3_T = bits(io_dividend, 3, 3) @[src/main/scala/arithmetic/Divider.scala 38:39]
    node _quotient_4_T = bits(io_dividend, 4, 4) @[src/main/scala/arithmetic/Divider.scala 38:39]
    node _quotient_5_T = bits(io_dividend, 5, 5) @[src/main/scala/arithmetic/Divider.scala 38:39]
    node _T = eq(loopdone, UInt<1>("h0")) @[src/main/scala/arithmetic/Divider.scala 45:18]
    node _sumcollector_T = shl(remainder, 1) @[src/main/scala/arithmetic/Divider.scala 47:39]
    node _sumcollector_T_1 = bits(counter, 2, 0)
    node _GEN_0 = validif(eq(UInt<1>("h0"), _sumcollector_T_1), quotient_0) @[src/main/scala/arithmetic/Divider.scala 48:{42,42}]
    node _GEN_1 = mux(eq(UInt<1>("h1"), _sumcollector_T_1), quotient_1, _GEN_0) @[src/main/scala/arithmetic/Divider.scala 48:{42,42}]
    node _GEN_2 = mux(eq(UInt<2>("h2"), _sumcollector_T_1), quotient_2, _GEN_1) @[src/main/scala/arithmetic/Divider.scala 48:{42,42}]
    node _GEN_3 = mux(eq(UInt<2>("h3"), _sumcollector_T_1), quotient_3, _GEN_2) @[src/main/scala/arithmetic/Divider.scala 48:{42,42}]
    node _GEN_4 = mux(eq(UInt<3>("h4"), _sumcollector_T_1), quotient_4, _GEN_3) @[src/main/scala/arithmetic/Divider.scala 48:{42,42}]
    node _GEN_5 = mux(eq(UInt<3>("h5"), _sumcollector_T_1), quotient_5, _GEN_4) @[src/main/scala/arithmetic/Divider.scala 48:{42,42}]
    node _quotient_sumcollector_T_1 = _GEN_5 @[src/main/scala/arithmetic/Divider.scala 48:42]
    node _sumcollector_T_2 = add(sumcollector, _quotient_sumcollector_T_1) @[src/main/scala/arithmetic/Divider.scala 48:42]
    node _sumcollector_T_3 = tail(_sumcollector_T_2, 1) @[src/main/scala/arithmetic/Divider.scala 48:42]
    node _T_1 = lt(sumcollector, divisor) @[src/main/scala/arithmetic/Divider.scala 50:32]
    node _T_2 = bits(counter, 2, 0)
    node _quotient_T_2 = UInt<1>("h0") @[src/main/scala/arithmetic/Divider.scala 51:{35,35}]
    node _GEN_6 = mux(eq(UInt<1>("h0"), _T_2), _quotient_T_2, quotient_0) @[src/main/scala/arithmetic/Divider.scala 21:27 51:{35,35}]
    node _GEN_7 = mux(eq(UInt<1>("h1"), _T_2), _quotient_T_2, quotient_1) @[src/main/scala/arithmetic/Divider.scala 21:27 51:{35,35}]
    node _GEN_8 = mux(eq(UInt<2>("h2"), _T_2), _quotient_T_2, quotient_2) @[src/main/scala/arithmetic/Divider.scala 21:27 51:{35,35}]
    node _GEN_9 = mux(eq(UInt<2>("h3"), _T_2), _quotient_T_2, quotient_3) @[src/main/scala/arithmetic/Divider.scala 21:27 51:{35,35}]
    node _GEN_10 = mux(eq(UInt<3>("h4"), _T_2), _quotient_T_2, quotient_4) @[src/main/scala/arithmetic/Divider.scala 21:27 51:{35,35}]
    node _GEN_11 = mux(eq(UInt<3>("h5"), _T_2), _quotient_T_2, quotient_5) @[src/main/scala/arithmetic/Divider.scala 21:27 51:{35,35}]
    node _T_3 = bits(counter, 2, 0)
    node _quotient_T_3 = UInt<1>("h1") @[src/main/scala/arithmetic/Divider.scala 54:{35,35}]
    node _GEN_12 = mux(eq(UInt<1>("h0"), _T_3), _quotient_T_3, quotient_0) @[src/main/scala/arithmetic/Divider.scala 21:27 54:{35,35}]
    node _GEN_13 = mux(eq(UInt<1>("h1"), _T_3), _quotient_T_3, quotient_1) @[src/main/scala/arithmetic/Divider.scala 21:27 54:{35,35}]
    node _GEN_14 = mux(eq(UInt<2>("h2"), _T_3), _quotient_T_3, quotient_2) @[src/main/scala/arithmetic/Divider.scala 21:27 54:{35,35}]
    node _GEN_15 = mux(eq(UInt<2>("h3"), _T_3), _quotient_T_3, quotient_3) @[src/main/scala/arithmetic/Divider.scala 21:27 54:{35,35}]
    node _GEN_16 = mux(eq(UInt<3>("h4"), _T_3), _quotient_T_3, quotient_4) @[src/main/scala/arithmetic/Divider.scala 21:27 54:{35,35}]
    node _GEN_17 = mux(eq(UInt<3>("h5"), _T_3), _quotient_T_3, quotient_5) @[src/main/scala/arithmetic/Divider.scala 21:27 54:{35,35}]
    node _remainder_T = sub(sumcollector, divisor) @[src/main/scala/arithmetic/Divider.scala 55:43]
    node _remainder_T_1 = tail(_remainder_T, 1) @[src/main/scala/arithmetic/Divider.scala 55:43]
    node _GEN_18 = mux(_T_1, _GEN_6, _GEN_12) @[src/main/scala/arithmetic/Divider.scala 50:42]
    node _GEN_19 = mux(_T_1, _GEN_7, _GEN_13) @[src/main/scala/arithmetic/Divider.scala 50:42]
    node _GEN_20 = mux(_T_1, _GEN_8, _GEN_14) @[src/main/scala/arithmetic/Divider.scala 50:42]
    node _GEN_21 = mux(_T_1, _GEN_9, _GEN_15) @[src/main/scala/arithmetic/Divider.scala 50:42]
    node _GEN_22 = mux(_T_1, _GEN_10, _GEN_16) @[src/main/scala/arithmetic/Divider.scala 50:42]
    node _GEN_23 = mux(_T_1, _GEN_11, _GEN_17) @[src/main/scala/arithmetic/Divider.scala 50:42]
    node _GEN_24 = mux(_T_1, sumcollector, _remainder_T_1) @[src/main/scala/arithmetic/Divider.scala 50:42 52:27 55:27]
    node _counter_T = sub(counter, UInt<1>("h1")) @[src/main/scala/arithmetic/Divider.scala 58:32]
    node _counter_T_1 = tail(_counter_T, 1) @[src/main/scala/arithmetic/Divider.scala 58:32]
    node _T_4 = eq(counter, UInt<1>("h0")) @[src/main/scala/arithmetic/Divider.scala 60:18]
    node _GEN_25 = mux(_T_4, UInt<1>("h1"), loopdone) @[src/main/scala/arithmetic/Divider.scala 60:27 61:16 26:27]
    node _GEN_26 = mux(_T, _sumcollector_T_3, sumcollector) @[src/main/scala/arithmetic/Divider.scala 45:28 48:26 24:31]
    node _GEN_27 = mux(_T, _GEN_18, quotient_0) @[src/main/scala/arithmetic/Divider.scala 21:27 45:28]
    node _GEN_28 = mux(_T, _GEN_19, quotient_1) @[src/main/scala/arithmetic/Divider.scala 21:27 45:28]
    node _GEN_29 = mux(_T, _GEN_20, quotient_2) @[src/main/scala/arithmetic/Divider.scala 21:27 45:28]
    node _GEN_30 = mux(_T, _GEN_21, quotient_3) @[src/main/scala/arithmetic/Divider.scala 21:27 45:28]
    node _GEN_31 = mux(_T, _GEN_22, quotient_4) @[src/main/scala/arithmetic/Divider.scala 21:27 45:28]
    node _GEN_32 = mux(_T, _GEN_23, quotient_5) @[src/main/scala/arithmetic/Divider.scala 21:27 45:28]
    node _GEN_33 = mux(_T, _GEN_24, remainder) @[src/main/scala/arithmetic/Divider.scala 20:28 45:28]
    node _GEN_34 = mux(_T, _counter_T_1, counter) @[src/main/scala/arithmetic/Divider.scala 45:28 58:21 25:26]
    node _GEN_35 = mux(_T, _GEN_25, loopdone) @[src/main/scala/arithmetic/Divider.scala 26:27 45:28]
    node _GEN_36 = mux(io_start, UInt<3>("h5"), _GEN_34) @[src/main/scala/arithmetic/Divider.scala 28:21 30:17]
    node _GEN_37 = mux(io_start, UInt<1>("h0"), _GEN_26) @[src/main/scala/arithmetic/Divider.scala 28:21 31:23]
    node _GEN_38 = mux(io_start, UInt<1>("h0"), _GEN_33) @[src/main/scala/arithmetic/Divider.scala 28:21 32:19]
    node _GEN_39 = mux(io_start, UInt<1>("h0"), _GEN_35) @[src/main/scala/arithmetic/Divider.scala 28:21 33:18]
    node _GEN_40 = mux(io_start, io_divisor, divisor) @[src/main/scala/arithmetic/Divider.scala 28:21 34:17 22:26]
    node _GEN_41 = mux(io_start, _quotient_0_T, _GEN_27) @[src/main/scala/arithmetic/Divider.scala 28:21 38:25]
    node _GEN_42 = mux(io_start, _quotient_1_T, _GEN_28) @[src/main/scala/arithmetic/Divider.scala 28:21 38:25]
    node _GEN_43 = mux(io_start, _quotient_2_T, _GEN_29) @[src/main/scala/arithmetic/Divider.scala 28:21 38:25]
    node _GEN_44 = mux(io_start, _quotient_3_T, _GEN_30) @[src/main/scala/arithmetic/Divider.scala 28:21 38:25]
    node _GEN_45 = mux(io_start, _quotient_4_T, _GEN_31) @[src/main/scala/arithmetic/Divider.scala 28:21 38:25]
    node _GEN_46 = mux(io_start, _quotient_5_T, _GEN_32) @[src/main/scala/arithmetic/Divider.scala 28:21 38:25]
    node io_quotient_lo_hi = cat(quotient_2, quotient_1) @[src/main/scala/arithmetic/Divider.scala 66:27]
    node io_quotient_lo = cat(io_quotient_lo_hi, quotient_0) @[src/main/scala/arithmetic/Divider.scala 66:27]
    node io_quotient_hi_hi = cat(quotient_5, quotient_4) @[src/main/scala/arithmetic/Divider.scala 66:27]
    node io_quotient_hi = cat(io_quotient_hi_hi, quotient_3) @[src/main/scala/arithmetic/Divider.scala 66:27]
    node _io_quotient_T = cat(io_quotient_hi, io_quotient_lo) @[src/main/scala/arithmetic/Divider.scala 66:27]
    node _quotient_WIRE_0 = UInt<1>("h0") @[src/main/scala/arithmetic/Divider.scala 21:{35,35}]
    node _quotient_WIRE_1 = UInt<1>("h0") @[src/main/scala/arithmetic/Divider.scala 21:{35,35}]
    node _quotient_WIRE_2 = UInt<1>("h0") @[src/main/scala/arithmetic/Divider.scala 21:{35,35}]
    node _quotient_WIRE_3 = UInt<1>("h0") @[src/main/scala/arithmetic/Divider.scala 21:{35,35}]
    node _quotient_WIRE_4 = UInt<1>("h0") @[src/main/scala/arithmetic/Divider.scala 21:{35,35}]
    node _quotient_WIRE_5 = UInt<1>("h0") @[src/main/scala/arithmetic/Divider.scala 21:{35,35}]
    io_done <= loopdone @[src/main/scala/arithmetic/Divider.scala 65:11]
    io_quotient <= _io_quotient_T @[src/main/scala/arithmetic/Divider.scala 66:15]
    io_remainder <= remainder @[src/main/scala/arithmetic/Divider.scala 67:16]
    remainder <= mux(reset, UInt<6>("h0"), _GEN_38) @[src/main/scala/arithmetic/Divider.scala 20:{28,28}]
    quotient_0 <= mux(reset, _quotient_WIRE_0, _GEN_41) @[src/main/scala/arithmetic/Divider.scala 21:{27,27}]
    quotient_1 <= mux(reset, _quotient_WIRE_1, _GEN_42) @[src/main/scala/arithmetic/Divider.scala 21:{27,27}]
    quotient_2 <= mux(reset, _quotient_WIRE_2, _GEN_43) @[src/main/scala/arithmetic/Divider.scala 21:{27,27}]
    quotient_3 <= mux(reset, _quotient_WIRE_3, _GEN_44) @[src/main/scala/arithmetic/Divider.scala 21:{27,27}]
    quotient_4 <= mux(reset, _quotient_WIRE_4, _GEN_45) @[src/main/scala/arithmetic/Divider.scala 21:{27,27}]
    quotient_5 <= mux(reset, _quotient_WIRE_5, _GEN_46) @[src/main/scala/arithmetic/Divider.scala 21:{27,27}]
    divisor <= mux(reset, UInt<6>("h0"), _GEN_40) @[src/main/scala/arithmetic/Divider.scala 22:{26,26}]
    sumcollector <= mux(reset, UInt<6>("h0"), _GEN_37) @[src/main/scala/arithmetic/Divider.scala 24:{31,31}]
    counter <= mux(reset, UInt<7>("h0"), _GEN_36) @[src/main/scala/arithmetic/Divider.scala 25:{26,26}]
    loopdone <= mux(reset, UInt<1>("h0"), _GEN_39) @[src/main/scala/arithmetic/Divider.scala 26:{27,27}]
